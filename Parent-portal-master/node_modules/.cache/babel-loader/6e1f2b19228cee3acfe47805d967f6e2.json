{"ast":null,"code":"var _jsxFileName = \"/Users/gaumhatr/StudioProjects/dashboard/parent-portal-master/src/Components/DashBoard/DashBoard.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Container, Row, Col, Table, Spinner, Modal } from \"react-bootstrap\";\nimport SideBar from \"../SideBar/SideBar\";\nimport \"./DashBoard.css\";\nimport { DataContext } from \"../Data\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport { Helmet } from \"react-helmet\";\n\nconst DashBoard = () => {\n  const handleShow = id => {\n    const fake = data.find(x => x._id === id);\n    setModal(fake);\n\n    if (fake.prescription) {\n      setMedi(fake.medicine);\n    }\n\n    setShow(true);\n  };\n\n  useEffect(() => {\n    const dat = new Date().toDateString();\n    const todayAppoint = data.filter(x => x.day === dat);\n    setToday(todayAppoint);\n  }, [data]);\n  useEffect(() => {\n    if (data.length !== 0) {\n      const uniq = [...new Set(data.map(x => x.firstname))];\n      setUser(uniq);\n    }\n  }, [data]);\n  useEffect(() => {\n    let cnt = 0;\n    data.map(x => {\n      if (x.status === \"Pending\") {\n        cnt++;\n      }\n    });\n    setPending(cnt);\n  }, [data]);\n\n  const updateMedi = e => {\n    e.preventDefault();\n    const form_data = document.getElementsByClassName(\"form-data\");\n    const newData = [...[], modal];\n    const formData = {\n      medicine: form_data[0].value,\n      dose: form_data[1].value,\n      days: form_data[2].value\n    };\n\n    if (newData[0].prescription === true) {\n      const final = [...newData[0].medicine, formData]; //console.log(final);\n\n      newData[0].medicine = final;\n      setMedi(final);\n      fetch(\"https://still-mesa-75708.herokuapp.com/updatePrescription\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: newData[0]._id,\n          medicine: final\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(data => console.log(data));\n    } else {\n      const final = [formData];\n      newData[0].medicine = final;\n      setMedi(final);\n      newData[0].prescription = true;\n      fetch(\"https://still-mesa-75708.herokuapp.com/updatePrescription\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: newData[0]._id,\n          medicine: final\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n\n    setModal(newData[0]);\n    form_data[0].value = \"\";\n    form_data[2].value = 0;\n  };\n\n  console.log(medi);\n\n  const handleAction = (e, id) => {\n    const newArr = data.map(x => {\n      if (x._id === id) {\n        x.status = e.target.value;\n        return x;\n      } else {\n        return x;\n      }\n    });\n    setData(newArr);\n    fetch(\"https://still-mesa-75708.herokuapp.com/updateStatus\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        id: id,\n        value: e.target.value\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(data => console.log(data));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Dashboard | Doctors Portal\"), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Now a days All things are based on Online. Find a good doctor is so  much hassle  now a days. Doctors portal is going to give you advantage that you don't need to go hospital physically.You can book and get the best treatment from now .\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"online doctors book appointment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-6 main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-md-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title__hamburger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"DashBoard\"), /*#__PURE__*/React.createElement(Hamburger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"docter/docter_welcome.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"How are you feeling today?\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstname\",\n    value: firstname,\n    onChange: e => setFirstname(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Enter his Age:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"age\",\n    value: age,\n    onChange: e => setAge(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Enter parents Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Enter parents PhoneNumber:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phoneNumber\",\n    value: phoneNumber,\n    onChange: e => setphoneNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => handleSubmitButtonCLick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default DashBoard;","map":{"version":3,"sources":["/Users/gaumhatr/StudioProjects/dashboard/parent-portal-master/src/Components/DashBoard/DashBoard.js"],"names":["React","useEffect","useState","useContext","Container","Row","Col","Table","Spinner","Modal","SideBar","DataContext","Hamburger","Helmet","DashBoard","handleShow","id","fake","data","find","x","_id","setModal","prescription","setMedi","medicine","setShow","dat","Date","toDateString","todayAppoint","filter","day","setToday","length","uniq","Set","map","firstname","setUser","cnt","status","setPending","updateMedi","e","preventDefault","form_data","document","getElementsByClassName","newData","modal","formData","value","dose","days","final","fetch","method","body","JSON","stringify","headers","then","response","json","console","log","medi","handleAction","newArr","target","setData","setFirstname","age","setAge","email","setEmail","phoneNumber","setphoneNumber","handleSubmitButtonCLick"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Container, Row, Col, Table, Spinner, Modal } from \"react-bootstrap\";\nimport SideBar from \"../SideBar/SideBar\";\nimport \"./DashBoard.css\";\nimport { DataContext } from \"../Data\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport { Helmet } from \"react-helmet\";\nconst DashBoard = () => {\n\n  const handleShow = (id) => {\n    const fake = data.find((x) => x._id === id);\n    setModal(fake);\n    if (fake.prescription) {\n      setMedi(fake.medicine);\n    }\n    setShow(true);\n  };\n  useEffect(() => {\n    const dat = new Date().toDateString();\n    const todayAppoint = data.filter((x) => x.day === dat);\n    setToday(todayAppoint);\n  }, [data]);\n  useEffect(() => {\n    if (data.length !== 0) {\n      const uniq = [...new Set(data.map((x) => x.firstname))];\n      setUser(uniq);\n    }\n  }, [data]);\n  useEffect(() => {\n    let cnt = 0;\n    data.map((x) => {\n      if (x.status === \"Pending\") {\n        cnt++;\n      }\n    });\n    setPending(cnt);\n  }, [data]);\n  const updateMedi = (e) => {\n    e.preventDefault();\n    const form_data = document.getElementsByClassName(\"form-data\");\n    const newData = [...[], modal];\n    const formData = {\n      medicine: form_data[0].value,\n      dose: form_data[1].value,\n      days: form_data[2].value,\n    };\n    if (newData[0].prescription === true) {\n      const final = [...newData[0].medicine, formData];\n      //console.log(final);\n      newData[0].medicine = final;\n      setMedi(final);\n      fetch(\"https://still-mesa-75708.herokuapp.com/updatePrescription\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: newData[0]._id,\n          medicine: final,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => console.log(data));\n    } else {\n      const final = [formData];\n      newData[0].medicine = final;\n      setMedi(final);\n      newData[0].prescription = true;\n      fetch(\"https://still-mesa-75708.herokuapp.com/updatePrescription\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: newData[0]._id,\n          medicine: final,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => console.log(data));\n    }\n    setModal(newData[0]);\n    form_data[0].value = \"\";\n    form_data[2].value = 0;\n  };\n  console.log(medi);\n  const handleAction = (e, id) => {\n    const newArr = data.map((x) => {\n      if (x._id === id) {\n        x.status = e.target.value;\n        return x;\n      } else {\n        return x;\n      }\n    });\n    setData(newArr);\n    fetch(\"https://still-mesa-75708.herokuapp.com/updateStatus\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        id: id,\n        value: e.target.value,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  };\n  return (\n    <Container fluid className=\"dashboard\">\n      <Helmet>\n        <title>Dashboard | Doctors Portal</title>\n        <meta name=\"description\" content=\"Now a days All things are based on Online. Find a good doctor is so  much hassle  now a days.\n        Doctors portal is going to give you advantage that you don't need to go hospital physically.You can book and get the best treatment from now .\"/>\n        <meta name=\"keywords\" content=\"online doctors book appointment\"/>\n      </Helmet>\n      <div className=\"ml-6 main\">\n        <div className=\"d-md-block\">\n          <SideBar></SideBar>\n        </div>\n        <div className=\"title__hamburger\">\n          <h3 className=\"mt-3\">DashBoard</h3>\n          <Hamburger></Hamburger>\n        </div>\n\n        <img src={\"docter/docter_welcome.svg\"}/>\n\n        <div>\n          {/*<form>*/}\n          <text>How are you feeling today?</text>\n          <input\n              type='text'\n              name='firstname'\n              value={firstname}\n              onChange={e => setFirstname(e.target.value)}\n          />\n          <br/>\n          <p>Enter his Age:</p>\n          <input\n              type='text'\n              name='age'\n              value={age}\n              onChange={e => setAge(e.target.value)}\n          />\n          <br/>\n          <p>Enter parents Email:</p>\n          <input\n              type='text'\n              name='email'\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n          />\n          <br/>\n          <p>Enter parents PhoneNumber:</p>\n          <input\n              type='text'\n              name='phoneNumber'\n              value={phoneNumber}\n              onChange={e => setphoneNumber(e.target.value)}\n          />\n          <br/>\n          <button onClick={e=> handleSubmitButtonCLick(e)}>Submit</button>\n          {/*</form>*/}\n        </div>\n      </div>\n\n    </Container>\n  );\n};\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}