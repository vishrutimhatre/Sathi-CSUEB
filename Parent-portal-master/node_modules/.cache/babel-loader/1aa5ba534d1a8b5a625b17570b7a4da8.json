{"ast":null,"code":"var _jsxFileName = \"/Users/gaumhatr/StudioProjects/dashboard/doctors-portal-master/src/Components/KidsDetails/KidsDetails.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { Container, Row, Col, Table, Spinner } from \"react-bootstrap\";\nimport { Link, useLocation, BrowserRouter as Router } from \"react-router-dom\";\nimport { DataContext } from \"../Data\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport { Helmet } from \"react-helmet\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nconst condition = Boolean(Math.round(Math.random()));\nconst ChildsMoodsOptions = {\n  chart: {\n    type: 'spline'\n  },\n  rangeSelector: {\n    selected: 1\n  },\n  title: {\n    text: \"Child's Mood\"\n  },\n  series: [{\n    data: [[Date.UTC(2021, 1, 1), 1], [Date.UTC(2021, 1, 2), 2], [Date.UTC(2021, 1, 3), 2], [Date.UTC(2021, 1, 4), 1], [Date.UTC(2021, 1, 5), 4], [Date.UTC(2021, 1, 6), 6]]\n  }],\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n      month: condition ? \"%b-%y\" : '%b \\'%y'\n    }\n  }\n};\nconst ParentsMoodsOptions = {\n  chart: {\n    type: 'spline'\n  },\n  rangeSelector: {\n    selected: 1\n  },\n  title: {\n    text: \"Parents's Mood\"\n  },\n  series: [{\n    data: [[Date.UTC(2021, 1, 1), 1], [Date.UTC(2021, 1, 2), 2], [Date.UTC(2021, 1, 3), 2], [Date.UTC(2021, 1, 4), 1], [Date.UTC(2021, 1, 5), 4], [Date.UTC(2021, 1, 6), 6]]\n  }],\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: {\n      day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n      month: condition ? \"%b-%y\" : '%b \\'%y'\n    }\n  }\n};\nconst options3 = {\n  chart: {\n    type: 'spline'\n  },\n  title: {\n    text: 'My chart'\n  },\n  series: [{\n    data: [3, 5, 6, 2, 4, 2]\n  }]\n};\n\nconst KidsDetails = props => {\n  const [data, setData] = useContext(DataContext);\n  const [selectedKid, setSelectedKid] = useState([]);\n  const [user, setUser] = useState([]);\n  const [userInfo, setUserInfo] = useState([]);\n  const [childsMoodsOptions, setChildsMoodsOptions] = useState({});\n  let kid_index = useLocation().pathname.split(\"/\").pop();\n  let childsMoodData = {};\n  console.log(kid_index);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/Appointment/\" + kid_index).then(response => response.json()).then(jsun => {\n      setSelectedKid(jsun);\n      childsMoodData = jsun.childsMood.map(function (mood) {\n        return [Date.UTC(mood.year, mood.month, mood.day), mood.score];\n      });\n      console.log(jsun.childsMood);\n      console.log(childsMoodData);\n      setChildsMoodsOptions({\n        chart: {\n          type: 'spline'\n        },\n        rangeSelector: {\n          selected: 1\n        },\n        title: {\n          text: \"Child's Mood\"\n        },\n        series: [{\n          // data: [[Date.UTC(2021, 1, 1),1],\n          //     [Date.UTC(2021, 1, 2),2],\n          //     [Date.UTC(2021, 1, 3),2],\n          //     [Date.UTC(2021, 1, 4),1],\n          //     [Date.UTC(2021, 1, 5),4],\n          //     [Date.UTC(2021, 1, 6),6]]\n          data: childsMoodData\n        }],\n        xAxis: {\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n            month: condition ? \"%b-%y\" : '%b \\'%y'\n          }\n        }\n      });\n    });\n  }, []);\n  console.log(\"Selected Kid:\");\n  console.log(selectedKid); // let ChildsMoodsOptions = {\n  //     chart: {\n  //         type: 'spline'\n  //     },\n  //     rangeSelector: {\n  //         selected: 1\n  //     },\n  //     title: {\n  //         text: \"Child's Mood\"\n  //     },\n  //     series: [\n  //         {\n  //             // data: [[Date.UTC(2021, 1, 1),1],\n  //             //     [Date.UTC(2021, 1, 2),2],\n  //             //     [Date.UTC(2021, 1, 3),2],\n  //             //     [Date.UTC(2021, 1, 4),1],\n  //             //     [Date.UTC(2021, 1, 5),4],\n  //             //     [Date.UTC(2021, 1, 6),6]]\n  //             data: childsMoodData\n  //         }\n  //     ],\n  //     xAxis: {\n  //         type: 'datetime',\n  //         dateTimeLabelFormats: {\n  //             day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n  //             month: condition ? \"%b-%y\" : '%b \\'%y'\n  //         }\n  //     }\n  // };\n\n  const ParentsMoodsOptions = {\n    chart: {\n      type: 'spline'\n    },\n    rangeSelector: {\n      selected: 1\n    },\n    title: {\n      text: \"Parents's Mood\"\n    },\n    series: [{\n      data: [[Date.UTC(2021, 1, 1), 1], [Date.UTC(2021, 1, 2), 2], [Date.UTC(2021, 1, 3), 2], [Date.UTC(2021, 1, 4), 1], [Date.UTC(2021, 1, 5), 4], [Date.UTC(2021, 1, 6), 6]]\n    }],\n    xAxis: {\n      type: 'datetime',\n      dateTimeLabelFormats: {\n        day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n        month: condition ? \"%b-%y\" : '%b \\'%y'\n      }\n    }\n  };\n  useEffect(() => {\n    if (data.length !== 0) {\n      const uniq = [...new Set(data.map(x => x.firstname))];\n      setUser(uniq);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (user.length !== 0) {\n      const fake = user.map(x => {\n        const te = data.find(y => y.firstname === x);\n        return te;\n      });\n      setUserInfo(fake);\n    }\n  }, [user, data]);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, \"Patients List | Doctors Portal\"), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Now a days All things are based on Online. Find a good doctor is so  much hassle  now a days. Doctors portal is going to give you advantage that you don't need to go hospital physically.You can book and get the best treatment from now .\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"online doctors book appointment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main ml-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-md-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title__hamburger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, \"Kids List\"), /*#__PURE__*/React.createElement(Hamburger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: childsMoodsOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: ParentsMoodsOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: options3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default KidsDetails;","map":{"version":3,"sources":["/Users/gaumhatr/StudioProjects/dashboard/doctors-portal-master/src/Components/KidsDetails/KidsDetails.js"],"names":["React","useEffect","useState","useContext","SideBar","Container","Row","Col","Table","Spinner","Link","useLocation","BrowserRouter","Router","DataContext","Hamburger","Helmet","Highcharts","HighchartsReact","condition","Boolean","Math","round","random","ChildsMoodsOptions","chart","type","rangeSelector","selected","title","text","series","data","Date","UTC","xAxis","dateTimeLabelFormats","day","month","ParentsMoodsOptions","options3","KidsDetails","props","setData","selectedKid","setSelectedKid","user","setUser","userInfo","setUserInfo","childsMoodsOptions","setChildsMoodsOptions","kid_index","pathname","split","pop","childsMoodData","console","log","fetch","then","response","json","jsun","childsMood","map","mood","year","score","length","uniq","Set","x","firstname","fake","te","find","y"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { Container, Row, Col, Table, Spinner } from \"react-bootstrap\";\nimport { Link, useLocation, BrowserRouter as Router } from \"react-router-dom\";\nimport { DataContext } from \"../Data\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport { Helmet } from \"react-helmet\";\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst condition = Boolean(Math.round(Math.random()))\n\nconst ChildsMoodsOptions = {\n    chart: {\n        type: 'spline'\n    },\n    rangeSelector: {\n        selected: 1\n    },\n    title: {\n        text: \"Child's Mood\"\n    },\n    series: [\n        {\n            data: [[Date.UTC(2021, 1, 1),1],\n                    [Date.UTC(2021, 1, 2),2],\n                    [Date.UTC(2021, 1, 3),2],\n                    [Date.UTC(2021, 1, 4),1],\n                    [Date.UTC(2021, 1, 5),4],\n                    [Date.UTC(2021, 1, 6),6]]\n        }\n    ],\n    xAxis: {\n        type: 'datetime',\n        dateTimeLabelFormats: {\n            day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n            month: condition ? \"%b-%y\" : '%b \\'%y'\n        }\n    }\n};\n\nconst ParentsMoodsOptions = {\n    chart: {\n        type: 'spline'\n    },\n    rangeSelector: {\n        selected: 1\n    },\n    title: {\n        text: \"Parents's Mood\"\n    },\n    series: [\n        {\n            data: [[Date.UTC(2021, 1, 1),1],\n                [Date.UTC(2021, 1, 2),2],\n                [Date.UTC(2021, 1, 3),2],\n                [Date.UTC(2021, 1, 4),1],\n                [Date.UTC(2021, 1, 5),4],\n                [Date.UTC(2021, 1, 6),6]]\n        }\n    ],\n    xAxis: {\n        type: 'datetime',\n        dateTimeLabelFormats: {\n            day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n            month: condition ? \"%b-%y\" : '%b \\'%y'\n        }\n    }\n};\n\nconst options3 = {\n    chart: {\n        type: 'spline'\n    },\n    title: {\n        text: 'My chart'\n    },\n    series: [\n        {\n            data: [3, 5, 6, 2, 4, 2]\n        }\n    ]\n};\n\nconst KidsDetails = (props) => {\n    const [data, setData] = useContext(DataContext);\n    const [selectedKid, setSelectedKid] = useState([])\n    const [user, setUser] = useState([]);\n    const [userInfo, setUserInfo] = useState([]);\n    const [childsMoodsOptions, setChildsMoodsOptions] = useState({})\n    let kid_index = useLocation().pathname.split(\"/\").pop()\n    let childsMoodData = {}\n\n\n    console.log(kid_index)\n\n\n    useEffect(() => {\n        fetch(\"http://localhost:5000/Appointment/\"+kid_index)\n            .then((response) => response.json())\n            .then((jsun) => {\n                setSelectedKid(jsun)\n                childsMoodData = jsun.childsMood.map(function(mood){ return [Date.UTC(mood.year,mood.month, mood.day),mood.score]})\n                console.log(jsun.childsMood)\n                console.log(childsMoodData)\n                setChildsMoodsOptions({\n                    chart: {\n                        type: 'spline'\n                    },\n                    rangeSelector: {\n                        selected: 1\n                    },\n                    title: {\n                        text: \"Child's Mood\"\n                    },\n                    series: [\n                        {\n                            // data: [[Date.UTC(2021, 1, 1),1],\n                            //     [Date.UTC(2021, 1, 2),2],\n                            //     [Date.UTC(2021, 1, 3),2],\n                            //     [Date.UTC(2021, 1, 4),1],\n                            //     [Date.UTC(2021, 1, 5),4],\n                            //     [Date.UTC(2021, 1, 6),6]]\n                            data: childsMoodData\n                        }\n                    ],\n                    xAxis: {\n                        type: 'datetime',\n                        dateTimeLabelFormats: {\n                            day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n                            month: condition ? \"%b-%y\" : '%b \\'%y'\n                        }\n                    }\n                })\n            });\n    }, []);\n    console.log(\"Selected Kid:\")\n    console.log(selectedKid);\n\n\n\n\n\n    // let ChildsMoodsOptions = {\n    //     chart: {\n    //         type: 'spline'\n    //     },\n    //     rangeSelector: {\n    //         selected: 1\n    //     },\n    //     title: {\n    //         text: \"Child's Mood\"\n    //     },\n    //     series: [\n    //         {\n    //             // data: [[Date.UTC(2021, 1, 1),1],\n    //             //     [Date.UTC(2021, 1, 2),2],\n    //             //     [Date.UTC(2021, 1, 3),2],\n    //             //     [Date.UTC(2021, 1, 4),1],\n    //             //     [Date.UTC(2021, 1, 5),4],\n    //             //     [Date.UTC(2021, 1, 6),6]]\n    //             data: childsMoodData\n    //         }\n    //     ],\n    //     xAxis: {\n    //         type: 'datetime',\n    //         dateTimeLabelFormats: {\n    //             day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n    //             month: condition ? \"%b-%y\" : '%b \\'%y'\n    //         }\n    //     }\n    // };\n\n    const ParentsMoodsOptions = {\n        chart: {\n            type: 'spline'\n        },\n        rangeSelector: {\n            selected: 1\n        },\n        title: {\n            text: \"Parents's Mood\"\n        },\n        series: [\n            {\n                data: [[Date.UTC(2021, 1, 1),1],\n                    [Date.UTC(2021, 1, 2),2],\n                    [Date.UTC(2021, 1, 3),2],\n                    [Date.UTC(2021, 1, 4),1],\n                    [Date.UTC(2021, 1, 5),4],\n                    [Date.UTC(2021, 1, 6),6]]\n            }\n        ],\n        xAxis: {\n            type: 'datetime',\n            dateTimeLabelFormats: {\n                day: condition ? \"%e-%b-%y\" : \"%e\\%b\\%y\",\n                month: condition ? \"%b-%y\" : '%b \\'%y'\n            }\n        }\n    };\n\n\n    useEffect(() => {\n        if (data.length !== 0) {\n            const uniq = [...new Set(data.map((x) => x.firstname))];\n            setUser(uniq);\n        }\n    }, [data]);\n    useEffect(() => {\n        if (user.length !== 0) {\n            const fake = user.map((x) => {\n                const te = data.find((y) => y.firstname === x);\n                return te;\n            });\n            setUserInfo(fake);\n        }\n    }, [user, data]);\n\n    return (\n        <Container fluid>\n            <Helmet>\n                <title>Patients List | Doctors Portal</title>\n                <meta name=\"description\" content=\"Now a days All things are based on Online. Find a good doctor is so  much hassle  now a days.\n        Doctors portal is going to give you advantage that you don't need to go hospital physically.You can book and get the best treatment from now .\"/>\n                <meta name=\"keywords\" content=\"online doctors book appointment\"/>\n            </Helmet>\n            <div className=\"main ml-6\">\n                <div className=\"d-md-block\">\n                    <SideBar></SideBar>\n                </div>\n                <div className=\"title__hamburger\">\n                    <h3 className=\"mt-3\">Kids List</h3>\n                    <Hamburger></Hamburger>\n                </div>\n\n                <div>\n                    <HighchartsReact highcharts={Highcharts} options={childsMoodsOptions} />\n                    <HighchartsReact highcharts={Highcharts} options={ParentsMoodsOptions} />\n                    <HighchartsReact highcharts={Highcharts} options={options3} />\n                </div>\n\n            </div>\n        </Container>\n    );\n};\n\nexport default KidsDetails;\n"]},"metadata":{},"sourceType":"module"}