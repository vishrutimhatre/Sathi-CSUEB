{"ast":null,"code":"var _jsxFileName = \"/Users/gaumhatr/StudioProjects/dashboard/parent-portal-master/src/Components/DashBoard/DashBoard.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Container, Row, Col, Table, Spinner, Modal } from \"react-bootstrap\";\nimport SideBar from \"../SideBar/SideBar\";\nimport \"./DashBoard.css\";\nimport { DataContext } from \"../Data\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport { Helmet } from \"react-helmet\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { UserContext } from \"../Context/Sign_In_Context\";\nimport ImagePicker from 'react-image-picker';\nimport 'react-image-picker/dist/index.css';\nimport img1 from '../../images/emotions/1.png';\nimport img2 from '../../images/emotions/2.png';\nimport img3 from '../../images/emotions/3.png';\nimport img4 from '../../images/emotions/4.png';\nimport img5 from '../../images/emotions/5.png';\nconst imageList = [img1, img2, img3, img4, img5];\n\nconst DashBoard = () => {\n  const [user, setUser] = useContext(UserContext);\n  const [data, setData] = useContext(DataContext);\n  const [startDate, setStartDate] = useState(new Date());\n  const [parentMoodIndex, setParentMoodIndex] = useState(\"\");\n  const [childMoodIndex, setChildMoodIndex] = useState(\"\");\n  const [childsMood, setChildsMood] = useState({});\n  const [parentsMood, setParentsMood] = useState({});\n  const [image, setImage] = useState(null);\n\n  const onParentPick = image => {\n    setParentMoodIndex(image.value + 1);\n    setImage({\n      image\n    });\n  };\n\n  const onChildPick = image => {\n    setChildMoodIndex(image.value + 1);\n    setImage({\n      image\n    });\n  };\n\n  const handleSubmitButtonCLick = event => {\n    let data = {\n      \"childsMood\": {\n        \"year\": startDate.getUTCFullYear(),\n        \"month\": startDate.getMonth(),\n        \"day\": startDate.getDate(),\n        \"score\": parseInt(childMoodIndex)\n      },\n      \"parentsMood\": {\n        \"year\": startDate.getUTCFullYear(),\n        \"month\": startDate.getMonth(),\n        \"day\": startDate.getDate(),\n        \"score\": parseInt(parentMoodIndex)\n      }\n    };\n    fetch(\"http://localhost:5000/Appointment/\" + user.selectedUser._id, {\n      method: \"PUT\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"SUCCESS!!\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Dashboard | Doctors Portal\"), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Now a days All things are based on Online. Find a good doctor is so  much hassle  now a days. Doctors portal is going to give you advantage that you don't need to go hospital physically.You can book and get the best treatment from now .\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"online doctors book appointment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-6 main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-md-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title__hamburger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Hello \", user.selectedUser.firstname, \"'s parent\"), /*#__PURE__*/React.createElement(Hamburger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Pick the date\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"How are you feeling today?\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"parentMoodIndex\",\n    value: parentMoodIndex,\n    onChange: e => setParentMoodIndex(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"How is your kid feeling today?\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"childMoodIndex\",\n    value: childMoodIndex,\n    onChange: e => setChildMoodIndex(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Hello [PARENT_NAME] how are you feeling today?\"), /*#__PURE__*/React.createElement(ImagePicker, {\n    images: imageList.map((image, i) => ({\n      src: image,\n      value: i\n    })),\n    onPick: onParentPick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"How was [KIDS_NAME] day today?\"), /*#__PURE__*/React.createElement(ImagePicker, {\n    images: imageList.map((image, i) => ({\n      src: image,\n      value: i\n    })),\n    onPick: onChildPick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => handleSubmitButtonCLick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default DashBoard;","map":{"version":3,"sources":["/Users/gaumhatr/StudioProjects/dashboard/parent-portal-master/src/Components/DashBoard/DashBoard.js"],"names":["React","useEffect","useState","useContext","Container","Row","Col","Table","Spinner","Modal","SideBar","DataContext","Hamburger","Helmet","DatePicker","UserContext","ImagePicker","img1","img2","img3","img4","img5","imageList","DashBoard","user","setUser","data","setData","startDate","setStartDate","Date","parentMoodIndex","setParentMoodIndex","childMoodIndex","setChildMoodIndex","childsMood","setChildsMood","parentsMood","setParentsMood","image","setImage","onParentPick","value","onChildPick","handleSubmitButtonCLick","event","getUTCFullYear","getMonth","getDate","parseInt","fetch","selectedUser","_id","method","body","JSON","stringify","headers","then","response","json","console","log","firstname","date","e","target","map","i","src"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Container, Row, Col, Table, Spinner, Modal } from \"react-bootstrap\";\nimport SideBar from \"../SideBar/SideBar\";\nimport \"./DashBoard.css\";\nimport { DataContext } from \"../Data\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport { Helmet } from \"react-helmet\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {UserContext} from \"../Context/Sign_In_Context\";\nimport ImagePicker from 'react-image-picker'\nimport 'react-image-picker/dist/index.css'\n\nimport img1 from '../../images/emotions/1.png'\nimport img2 from '../../images/emotions/2.png'\nimport img3 from '../../images/emotions/3.png'\nimport img4 from '../../images/emotions/4.png'\nimport img5 from '../../images/emotions/5.png'\n\nconst imageList = [img1, img2, img3, img4, img5]\n\nconst DashBoard = () => {\n  const [user, setUser] = useContext(UserContext);\n  const [data, setData] = useContext(DataContext);\n  const [startDate, setStartDate] = useState(new Date());\n  const [parentMoodIndex, setParentMoodIndex] = useState(\"\");\n  const [childMoodIndex, setChildMoodIndex] = useState(\"\");\n\n  const [childsMood, setChildsMood] = useState({});\n  const [parentsMood, setParentsMood] = useState({});\n\n  const [image,setImage] = useState(null);\n\n  const onParentPick = (image) => {\n      setParentMoodIndex(image.value +1)\n      setImage({image})\n  }\n\n  const onChildPick = (image) => {\n      setChildMoodIndex(image.value +1)\n      setImage({image})\n  }\n\n  const handleSubmitButtonCLick = (event) => {\n    let data = {\n      \"childsMood\": {\n              \"year\": startDate.getUTCFullYear(),\n              \"month\": startDate.getMonth(),\n              \"day\":startDate.getDate(),\n              \"score\": parseInt(childMoodIndex)\n          },\n      \"parentsMood\": {\n              \"year\": startDate.getUTCFullYear(),\n              \"month\":startDate.getMonth(),\n              \"day\":startDate.getDate(),\n              \"score\": parseInt(parentMoodIndex)\n          }\n    }\n\n    fetch(\"http://localhost:5000/Appointment/\" +user.selectedUser._id , {\n      method: \"PUT\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"SUCCESS!!\")\n        });\n  }\n\n  return (\n    <Container fluid className=\"dashboard\">\n      <Helmet>\n        <title>Dashboard | Doctors Portal</title>\n        <meta name=\"description\" content=\"Now a days All things are based on Online. Find a good doctor is so  much hassle  now a days.\n        Doctors portal is going to give you advantage that you don't need to go hospital physically.You can book and get the best treatment from now .\"/>\n        <meta name=\"keywords\" content=\"online doctors book appointment\"/>\n      </Helmet>\n      <div className=\"ml-6 main\">\n        <div className=\"d-md-block\">\n          <SideBar></SideBar>\n        </div>\n        <div className=\"title__hamburger\">\n          <h3 className=\"mt-3\">Hello {user.selectedUser.firstname}'s parent</h3>\n          <Hamburger></Hamburger>\n        </div>\n\n\n\n        <div>\n          {/*<form>*/}\n          <text>Pick the date</text>\n          <br/>\n          <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n          <br/>\n          <br/>\n          <text>How are you feeling today?</text>\n          <br/>\n          <input\n              type='text'\n              name='parentMoodIndex'\n              value={parentMoodIndex}\n              onChange={e => setParentMoodIndex(e.target.value)}\n          />\n          <br/>\n          <br/>\n\n          <text>How is your kid feeling today?</text>\n          <br/>\n          <input\n              type='text'\n              name='childMoodIndex'\n              value={childMoodIndex}\n              onChange={e => setChildMoodIndex(e.target.value)}\n          />\n          <br/>\n          <br/>\n\n          <text>Hello [PARENT_NAME] how are you feeling today?</text>\n          <ImagePicker\n                images={imageList.map((image, i) => ({src: image, value: i}))}\n                onPick={onParentPick}\n          />\n\n\n\n          <br/>\n          <br/>\n\n          <text>How was [KIDS_NAME] day today?</text>\n          <ImagePicker\n                images={imageList.map((image, i) => ({src: image, value: i}))}\n                onPick={onChildPick}\n          />\n\n\n          <br/>\n          <br/>\n\n\n          <button onClick={e=> handleSubmitButtonCLick(e)}>Submit</button>\n          {/*</form>*/}\n        </div>\n      </div>\n\n    </Container>\n  );\n};\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}